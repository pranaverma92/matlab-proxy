# Copyright 2023 The MathWorks, Inc

# Workflow to run MATLAB-Proxy system tests
name: System testing for MATLAB Proxy

on:
    push:
        branches:
            - system-tests
    workflow_dispatch:
jobs:
  playwright_e2e_tests:

    runs-on: ubuntu-latest
    env:
        NODE_VERSION: 18
        PYTHON_VERSION: 3.11

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2-beta
        with:
          release: 'R2023a'

      - name: Setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install xvfb
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Install node dependencies
        working-directory: ./tests/system-tests
        run: npm ci

      # - name: Run the linter
      #   working-directory: ./tests/system-tests
      #   run: npm run lint

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install wheel
          python3 -m pip install .[dev]

      - name: Install playwright dependency
        working-directory: ./tests/system-tests
        run: npm install playwright

      - name: Install playwright browsers
        working-directory: ./tests/system-tests
        run: npx playwright install --with-deps

      - name: Find an available port
        run: |
          FREE_PORT=$(python -c 'import socket; s=socket.socket(); s.bind(("", 0)); print(s.getsockname()[1]); s.close()');
          echo "Using port = ${FREE_PORT}"
          echo "TEST_MP_PORT=$FREE_PORT" >> "$GITHUB_ENV"

      - name: Run the Playwright tests
        working-directory: ./tests/system-tests
        env:
            TEST_USERNAME: ${{ secrets.TEST_USERNAME }}
            TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
            TEST_MP_PORT: ${{ env.TEST_MP_PORT }}
        run: |
            echo "Playwright version: $(npx playwright -V)"
            npx playwright test

      - name: Zip test results
        if: always()
        working-directory: tests/system-tests
        run: |
            zip -r zipped-system-tests-results.zip ./playwright-report ./test-results

      - name: Preserve test results after the job has finished
        if: always()
        uses: actions/upload-artifact@v3
        with:
            name: system_tests_results
            path: ./tests/system-tests/zipped-system-tests-results.zip
            retention-days: 5
